import "strings"
import "types"

_modules = {
	"root": {
		"data": {
			"vault_azure_access_credentials": {
				"creds": {
					"config": {
						"backend":         "azure",
						"role":            "keith-m-leung",
						"subscription_id": "ec23b771-c691-4929-b109-ebf808e51506",
						"validate_creds":  true,
					},
					"provisioners": null,
					"references": {
						"backend":         [],
						"role":            [],
						"subscription_id": [],
						"validate_creds":  [],
					},
				},
			},
		},
		"modules": {},
		"outputs": {},
		"providers": {
			"azurerm": {
				"alias": {
					"": {
						"config": {
							"features": [
								{},
							],
							"subscription_id": "ec23b771-c691-4929-b109-ebf808e51506",
							"tenant_id":       "4328f5c5-4e1f-4b4d-b5ee-604e7fe12ccf",
						},
						"references": {
							"client_id": [
								"data.vault_azure_access_credentials.creds.client_id",
								"data.vault_azure_access_credentials.creds",
							],
							"client_secret": [
								"data.vault_azure_access_credentials.creds.client_secret",
								"data.vault_azure_access_credentials.creds",
							],
							"features": [
								{},
							],
							"subscription_id": [],
							"tenant_id":       [],
						},
						"version": "~> 3.0",
					},
				},
				"config": {
					"features": [
						{},
					],
					"subscription_id": "ec23b771-c691-4929-b109-ebf808e51506",
					"tenant_id":       "4328f5c5-4e1f-4b4d-b5ee-604e7fe12ccf",
				},
				"references": {
					"client_id": [
						"data.vault_azure_access_credentials.creds.client_id",
						"data.vault_azure_access_credentials.creds",
					],
					"client_secret": [
						"data.vault_azure_access_credentials.creds.client_secret",
						"data.vault_azure_access_credentials.creds",
					],
					"features": [
						{},
					],
					"subscription_id": [],
					"tenant_id":       [],
				},
				"version": "~> 3.0",
			},
			"random": {
				"alias": {
					"": {
						"config":     {},
						"references": {},
						"version":    "~> 3.0",
					},
				},
				"config":     {},
				"references": {},
				"version":    "~> 3.0",
			},
			"vault": {
				"alias": {
					"": {
						"config": {
							"address": "https://vault.control.acceleratorlabs.ca",
						},
						"references": {
							"address": [],
						},
						"version": "",
					},
				},
				"config": {
					"address": "https://vault.control.acceleratorlabs.ca",
				},
				"references": {
					"address": [],
				},
				"version": "",
			},
		},
		"resources": {
			"azurerm_network_interface": {
				"main": {
					"config": {
						"ip_configuration": [
							{
								"name": "my_nic_configuration",
								"private_ip_address_allocation": "Dynamic",
							},
						],
					},
					"provisioners": null,
					"references": {
						"ip_configuration": [
							{
								"name": [],
								"private_ip_address_allocation": [],
								"public_ip_address_id": [
									"azurerm_public_ip.main.id",
									"azurerm_public_ip.main",
								],
								"subnet_id": [
									"azurerm_subnet.default.id",
									"azurerm_subnet.default",
								],
							},
						],
						"location": [
							"var.location",
						],
						"name": [
							"random_pet.main.id",
							"random_pet.main",
						],
						"resource_group_name": [
							"azurerm_resource_group.main.name",
							"azurerm_resource_group.main",
						],
					},
				},
			},
			"azurerm_public_ip": {
				"main": {
					"config": {
						"allocation_method": "Dynamic",
					},
					"provisioners": null,
					"references": {
						"allocation_method": [],
						"location": [
							"var.location",
						],
						"name": [
							"random_pet.main.id",
							"random_pet.main",
						],
						"resource_group_name": [
							"azurerm_resource_group.main.name",
							"azurerm_resource_group.main",
						],
					},
				},
			},
			"azurerm_resource_group": {
				"main": {
					"config": {
						"name": "default-resource-group",
					},
					"provisioners": null,
					"references": {
						"location": [
							"var.region",
						],
						"name": [],
					},
				},
			},
			"azurerm_subnet": {
				"default": {
					"config": {
						"address_prefixes": [
							"10.0.1.0/24",
						],
						"name": "default-subnet",
					},
					"provisioners": null,
					"references": {
						"address_prefixes": [],
						"name":             [],
						"resource_group_name": [
							"azurerm_resource_group.main.name",
							"azurerm_resource_group.main",
						],
						"virtual_network_name": [
							"azurerm_virtual_network.default.name",
							"azurerm_virtual_network.default",
						],
					},
				},
			},
			"azurerm_virtual_network": {
				"default": {
					"config": {
						"address_space": [
							"10.0.0.0/16",
							"10.179.0.0/16",
						],
						"name": "default-network",
					},
					"provisioners": null,
					"references": {
						"address_space": [],
						"location": [
							"azurerm_resource_group.main.location",
							"azurerm_resource_group.main",
						],
						"name": [],
						"resource_group_name": [
							"azurerm_resource_group.main.name",
							"azurerm_resource_group.main",
						],
					},
				},
			},
			"azurerm_windows_virtual_machine": {
				"main": {
					"config": {
						"admin_password": "top-secret-password-ah8fg",
						"admin_username": "azureuser",
						"os_disk": [
							{
								"caching":              "ReadWrite",
								"storage_account_type": "Standard_LRS",
							},
						],
						"size": "Standard_B1ls",
						"source_image_reference": [
							{
								"offer":     "WindowsServer",
								"publisher": "MicrosoftWindowsServer",
								"sku":       "2022-datacenter-azure-edition",
								"version":   "latest",
							},
						],
					},
					"provisioners": null,
					"references": {
						"admin_password": [],
						"admin_username": [],
						"location": [
							"var.location",
						],
						"name": [
							"random_pet.main.id",
							"random_pet.main",
						],
						"network_interface_ids": [
							"azurerm_network_interface.main.id",
							"azurerm_network_interface.main",
						],
						"os_disk": [
							{
								"caching": [],
								"name": [
									"random_pet.main.id",
									"random_pet.main",
								],
								"storage_account_type": [],
							},
						],
						"resource_group_name": [
							"azurerm_resource_group.main.name",
							"azurerm_resource_group.main",
						],
						"size": [],
						"source_image_reference": [
							{
								"offer":     [],
								"publisher": [],
								"sku":       [],
								"version":   [],
							},
						],
					},
				},
			},
			"random_pet": {
				"main": {
					"config": {
						"length": 1,
					},
					"provisioners": null,
					"references": {
						"length": [],
					},
				},
			},
		},
		"variables": {
			"location": {
				"default":     "centralus",
				"description": "",
			},
			"region": {
				"default":     "centralus",
				"description": "(optional) Default Azure region to deploy to.",
			},
			"resource_group_name": {
				"default":     "default-resource-group",
				"description": "",
			},
		},
	},
}

module_paths = [
	[],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs
